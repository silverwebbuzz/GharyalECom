/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, Input, ContentChildren } from '@angular/core';
import { CollapsibleListItemComponent } from '../collapsible-list-item/collapsible-list-item.component';
import { CollapsibleService } from '../services/collapsible.service';
var CollapsibleListComponent = /** @class */ (function () {
    function CollapsibleListComponent(collapsibleService) {
        this.collapsibleService = collapsibleService;
        // component options
        //
        // describes the type of the collapsible list: 'accordion' or 'expandable'
        this.type = 'accordion';
    }
    /**
     * @return {?}
     */
    CollapsibleListComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.collapsibleService.setType(this.type);
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    CollapsibleListComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        for (var change in changes) {
            if (change === 'type') {
                this.type = changes["type"].currentValue;
                this.collapsibleService.setType(this.type);
            }
        }
    };
    CollapsibleListComponent.decorators = [
        { type: Component, args: [{
                    selector: 'collapsible-list',
                    template: "<ng-content select=\"collapsible-list-item\"></ng-content>",
                    providers: [CollapsibleService],
                    styles: ["\n    :host {\n      display: block;\n      margin: 0.5rem 0 1rem 0;\n      border-top: 1px solid #ddd;\n      border-right: 1px solid #ddd;\n      border-left: 1px solid #ddd;\n      box-shadow:\n        0 2px 2px 0 rgba(0, 0, 0, 0.14),\n        0 1px 5px 0 rgba(0, 0, 0, 0.12),\n        0 3px 1px -2px rgba(0, 0, 0, 0.2);\n    }\n\n    .side-nav :host,\n    .side-nav.fixed :host {\n      border: none;\n      box-shadow: none;\n    }\n\n    :host(.popout) {\n      border: none;\n      box-shadow: none;\n    }\n\n    :host(.popout) > li {\n      box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);\n      margin: 0 24px;\n      transition: margin 0.35s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n    }\n\n    .side-nav :host {\n      margin: 0;\n    }\n  "]
                }] }
    ];
    /** @nocollapse */
    CollapsibleListComponent.ctorParameters = function () { return [
        { type: CollapsibleService }
    ]; };
    CollapsibleListComponent.propDecorators = {
        type: [{ type: Input }],
        contentListItems: [{ type: ContentChildren, args: [CollapsibleListItemComponent,] }]
    };
    return CollapsibleListComponent;
}());
export { CollapsibleListComponent };
if (false) {
    /** @type {?} */
    CollapsibleListComponent.prototype.type;
    /** @type {?} */
    CollapsibleListComponent.prototype.contentListItems;
    /** @type {?} */
    CollapsibleListComponent.prototype.collapsibleService;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sbGFwc2libGUtbGlzdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyMi1jb2xsYXBzaWJsZS8iLCJzb3VyY2VzIjpbImxpYi9jb2xsYXBzaWJsZS1saXN0L2NvbGxhcHNpYmxlLWxpc3QuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUVULEtBQUssRUFDTCxlQUFlLEVBQ2hCLE1BQU0sZUFBZSxDQUFDO0FBRXZCLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLDBEQUEwRCxDQUFDO0FBRXhHLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGlDQUFpQyxDQUFDOztJQWlEbkUsa0NBQW9CLGtCQUFzQztRQUF0Qyx1QkFBa0IsR0FBbEIsa0JBQWtCLENBQW9COzs7O29CQUpkLFdBQVc7S0FJUTs7OztJQUUvRCwyQ0FBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsa0JBQWtCLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUM1Qzs7Ozs7SUFFRCw4Q0FBVzs7OztJQUFYLFVBQVksT0FBc0I7UUFDaEMsS0FBSyxJQUFNLE1BQU0sSUFBSSxPQUFPLEVBQUU7WUFDNUIsSUFBSSxNQUFNLEtBQUssTUFBTSxFQUFFO2dCQUNyQixJQUFJLENBQUMsSUFBSSxHQUFHLE9BQU8sU0FBTSxZQUFZLENBQUM7Z0JBQ3RDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQzVDO1NBQ0Y7S0FDRjs7Z0JBNURGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsa0JBQWtCO29CQUM1QixRQUFRLEVBQUUsNERBQTBEO29CQW1DcEUsU0FBUyxFQUFFLENBQUMsa0JBQWtCLENBQUM7NkJBbEN0QixneEJBaUNSO2lCQUVGOzs7O2dCQXhDUSxrQkFBa0I7Ozt1QkE2Q3hCLEtBQUs7bUNBRUwsZUFBZSxTQUFDLDRCQUE0Qjs7bUNBeEQvQzs7U0FrRGEsd0JBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ29tcG9uZW50LFxuICBPbkluaXQsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcyxcbiAgSW5wdXQsXG4gIENvbnRlbnRDaGlsZHJlblxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgQ29sbGFwc2libGVMaXN0SXRlbUNvbXBvbmVudCB9IGZyb20gJy4uL2NvbGxhcHNpYmxlLWxpc3QtaXRlbS9jb2xsYXBzaWJsZS1saXN0LWl0ZW0uY29tcG9uZW50JztcblxuaW1wb3J0IHsgQ29sbGFwc2libGVTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvY29sbGFwc2libGUuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2NvbGxhcHNpYmxlLWxpc3QnLFxuICB0ZW1wbGF0ZTogYDxuZy1jb250ZW50IHNlbGVjdD1cImNvbGxhcHNpYmxlLWxpc3QtaXRlbVwiPjwvbmctY29udGVudD5gLFxuICBzdHlsZXM6IFtgXG4gICAgOmhvc3Qge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBtYXJnaW46IDAuNXJlbSAwIDFyZW0gMDtcbiAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZGRkO1xuICAgICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgI2RkZDtcbiAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2RkZDtcbiAgICAgIGJveC1zaGFkb3c6XG4gICAgICAgIDAgMnB4IDJweCAwIHJnYmEoMCwgMCwgMCwgMC4xNCksXG4gICAgICAgIDAgMXB4IDVweCAwIHJnYmEoMCwgMCwgMCwgMC4xMiksXG4gICAgICAgIDAgM3B4IDFweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgICB9XG5cbiAgICAuc2lkZS1uYXYgOmhvc3QsXG4gICAgLnNpZGUtbmF2LmZpeGVkIDpob3N0IHtcbiAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgfVxuXG4gICAgOmhvc3QoLnBvcG91dCkge1xuICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICB9XG5cbiAgICA6aG9zdCgucG9wb3V0KSA+IGxpIHtcbiAgICAgIGJveC1zaGFkb3c6IDAgMnB4IDVweCAwIHJnYmEoMCwgMCwgMCwgMC4xNiksIDAgMnB4IDEwcHggMCByZ2JhKDAsIDAsIDAsIDAuMTIpO1xuICAgICAgbWFyZ2luOiAwIDI0cHg7XG4gICAgICB0cmFuc2l0aW9uOiBtYXJnaW4gMC4zNXMgY3ViaWMtYmV6aWVyKDAuMjUsIDAuNDYsIDAuNDUsIDAuOTQpO1xuICAgIH1cblxuICAgIC5zaWRlLW5hdiA6aG9zdCB7XG4gICAgICBtYXJnaW46IDA7XG4gICAgfVxuICBgXSxcbiAgcHJvdmlkZXJzOiBbQ29sbGFwc2libGVTZXJ2aWNlXVxufSlcbmV4cG9ydCBjbGFzcyBDb2xsYXBzaWJsZUxpc3RDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XG4gIC8vIGNvbXBvbmVudCBvcHRpb25zXG4gIC8vXG4gIC8vIGRlc2NyaWJlcyB0aGUgdHlwZSBvZiB0aGUgY29sbGFwc2libGUgbGlzdDogJ2FjY29yZGlvbicgb3IgJ2V4cGFuZGFibGUnXG4gIEBJbnB1dCgpIHR5cGU6ICdhY2NvcmRpb24nIHwgJ2V4cGFuZGFibGUnID0gJ2FjY29yZGlvbic7XG5cbiAgQENvbnRlbnRDaGlsZHJlbihDb2xsYXBzaWJsZUxpc3RJdGVtQ29tcG9uZW50KSBjb250ZW50TGlzdEl0ZW1zOiBBcnJheTxDb2xsYXBzaWJsZUxpc3RJdGVtQ29tcG9uZW50PjtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGNvbGxhcHNpYmxlU2VydmljZTogQ29sbGFwc2libGVTZXJ2aWNlKSB7IH1cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLmNvbGxhcHNpYmxlU2VydmljZS5zZXRUeXBlKHRoaXMudHlwZSk7XG4gIH1cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZCB7XG4gICAgZm9yIChjb25zdCBjaGFuZ2UgaW4gY2hhbmdlcykge1xuICAgICAgaWYgKGNoYW5nZSA9PT0gJ3R5cGUnKSB7XG4gICAgICAgIHRoaXMudHlwZSA9IGNoYW5nZXMudHlwZS5jdXJyZW50VmFsdWU7XG4gICAgICAgIHRoaXMuY29sbGFwc2libGVTZXJ2aWNlLnNldFR5cGUodGhpcy50eXBlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiJdfQ==