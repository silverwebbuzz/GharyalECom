/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, ContentChildren } from '@angular/core';
import { CollapsibleBodyComponent } from '../collapsible-body/collapsible-body.component';
import { CollapsibleService } from '../services/collapsible.service';
import { CollapsibleEventService } from '../services/collapsible-event.service';
var CollapsibleListItemComponent = /** @class */ (function () {
    function CollapsibleListItemComponent(collapsibleService) {
        this.collapsibleService = collapsibleService;
    }
    /**
     * @return {?}
     */
    CollapsibleListItemComponent.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        // store list bodies in 'CollapsibleService'
        this.contentListBodies.forEach(function (item) {
            _this.collapsibleService.addListBody(item);
        });
    };
    CollapsibleListItemComponent.decorators = [
        { type: Component, args: [{
                    selector: 'collapsible-list-item',
                    template: "\n        <ng-content select=\"collapsible-header\"></ng-content>\n        <ng-content select=\"collapsible-body\"></ng-content>\n    ",
                    providers: [CollapsibleEventService]
                }] }
    ];
    /** @nocollapse */
    CollapsibleListItemComponent.ctorParameters = function () { return [
        { type: CollapsibleService }
    ]; };
    CollapsibleListItemComponent.propDecorators = {
        contentListBodies: [{ type: ContentChildren, args: [CollapsibleBodyComponent,] }]
    };
    return CollapsibleListItemComponent;
}());
export { CollapsibleListItemComponent };
if (false) {
    /** @type {?} */
    CollapsibleListItemComponent.prototype.contentListBodies;
    /** @type {?} */
    CollapsibleListItemComponent.prototype.collapsibleService;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sbGFwc2libGUtbGlzdC1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXIyLWNvbGxhcHNpYmxlLyIsInNvdXJjZXMiOlsibGliL2NvbGxhcHNpYmxlLWxpc3QtaXRlbS9jb2xsYXBzaWJsZS1saXN0LWl0ZW0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQ0gsU0FBUyxFQUVULGVBQWUsRUFDbEIsTUFBTSxlQUFlLENBQUM7QUFFdkIsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sZ0RBQWdELENBQUM7QUFFMUYsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDckUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sdUNBQXVDLENBQUM7O0lBYzVFLHNDQUFvQixrQkFBc0M7UUFBdEMsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtLQUFLOzs7O0lBRS9ELHlEQUFrQjs7O0lBQWxCO1FBQUEsaUJBS0M7O1FBSEcsSUFBSSxDQUFDLGlCQUFpQixDQUFDLE9BQU8sQ0FBQyxVQUFDLElBQUk7WUFDaEMsS0FBSSxDQUFDLGtCQUFrQixDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUM3QyxDQUFDLENBQUM7S0FDTjs7Z0JBbkJKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsdUJBQXVCO29CQUNqQyxRQUFRLEVBQUUsd0lBR1Q7b0JBQ0QsU0FBUyxFQUFFLENBQUMsdUJBQXVCLENBQUM7aUJBQ3ZDOzs7O2dCQVZRLGtCQUFrQjs7O29DQWF0QixlQUFlLFNBQUMsd0JBQXdCOzt1Q0FyQjdDOztTQW1CYSw0QkFBNEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIENvbXBvbmVudCxcbiAgICBBZnRlckNvbnRlbnRJbml0LFxuICAgIENvbnRlbnRDaGlsZHJlblxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgQ29sbGFwc2libGVCb2R5Q29tcG9uZW50IH0gZnJvbSAnLi4vY29sbGFwc2libGUtYm9keS9jb2xsYXBzaWJsZS1ib2R5LmNvbXBvbmVudCc7XG5cbmltcG9ydCB7IENvbGxhcHNpYmxlU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL2NvbGxhcHNpYmxlLnNlcnZpY2UnO1xuaW1wb3J0IHsgQ29sbGFwc2libGVFdmVudFNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9jb2xsYXBzaWJsZS1ldmVudC5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdjb2xsYXBzaWJsZS1saXN0LWl0ZW0nLFxuICAgIHRlbXBsYXRlOiBgXG4gICAgICAgIDxuZy1jb250ZW50IHNlbGVjdD1cImNvbGxhcHNpYmxlLWhlYWRlclwiPjwvbmctY29udGVudD5cbiAgICAgICAgPG5nLWNvbnRlbnQgc2VsZWN0PVwiY29sbGFwc2libGUtYm9keVwiPjwvbmctY29udGVudD5cbiAgICBgLFxuICAgIHByb3ZpZGVyczogW0NvbGxhcHNpYmxlRXZlbnRTZXJ2aWNlXVxufSlcbmV4cG9ydCBjbGFzcyBDb2xsYXBzaWJsZUxpc3RJdGVtQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJDb250ZW50SW5pdCB7XG5cbiAgICBAQ29udGVudENoaWxkcmVuKENvbGxhcHNpYmxlQm9keUNvbXBvbmVudCkgY29udGVudExpc3RCb2RpZXM6IEFycmF5PENvbGxhcHNpYmxlQm9keUNvbXBvbmVudD47XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGNvbGxhcHNpYmxlU2VydmljZTogQ29sbGFwc2libGVTZXJ2aWNlKSB7IH1cblxuICAgIG5nQWZ0ZXJDb250ZW50SW5pdCgpIHtcbiAgICAgICAgLy8gc3RvcmUgbGlzdCBib2RpZXMgaW4gJ0NvbGxhcHNpYmxlU2VydmljZSdcbiAgICAgICAgdGhpcy5jb250ZW50TGlzdEJvZGllcy5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmNvbGxhcHNpYmxlU2VydmljZS5hZGRMaXN0Qm9keShpdGVtKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG59XG4iXX0=