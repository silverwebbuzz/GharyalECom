/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
var CollapsibleEvent = /** @class */ (function () {
    function CollapsibleEvent() {
    }
    return CollapsibleEvent;
}());
export { CollapsibleEvent };
if (false) {
    /** @type {?} */
    CollapsibleEvent.prototype.type;
}
var CollapsibleEventService = /** @class */ (function () {
    function CollapsibleEventService() {
        this.toggleCollapsibleItemSource = new Subject();
        // Observable string streams
        this.toggleCollapsibleItem$ = this.toggleCollapsibleItemSource.asObservable();
    }
    // Toggle collapsible item
    /**
     * @param {?=} event
     * @return {?}
     */
    CollapsibleEventService.prototype.toggleCollapsibleItem = /**
     * @param {?=} event
     * @return {?}
     */
    function (event) {
        this.toggleCollapsibleItemSource.next(event);
    };
    /**
     * @return {?}
     */
    CollapsibleEventService.prototype.unsubscribe = /**
     * @return {?}
     */
    function () {
        this.toggleCollapsibleItemSource.unsubscribe();
    };
    CollapsibleEventService.decorators = [
        { type: Injectable }
    ];
    return CollapsibleEventService;
}());
export { CollapsibleEventService };
if (false) {
    /** @type {?} */
    CollapsibleEventService.prototype.type;
    /** @type {?} */
    CollapsibleEventService.prototype.toggleCollapsibleItemSource;
    /** @type {?} */
    CollapsibleEventService.prototype.toggleCollapsibleItem$;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sbGFwc2libGUtZXZlbnQuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXIyLWNvbGxhcHNpYmxlLyIsInNvdXJjZXMiOlsibGliL3NlcnZpY2VzL2NvbGxhcHNpYmxlLWV2ZW50LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0MsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUUvQixJQUFBOzs7MkJBSkE7SUFNQyxDQUFBO0FBRkQsNEJBRUM7Ozs7Ozs7MkNBTXlDLElBQUksT0FBTyxFQUFPOztzQ0FHL0IsSUFBSSxDQUFDLDJCQUEyQixDQUFDLFlBQVksRUFBRTs7SUFFeEUsMEJBQTBCOzs7OztJQUMxQix1REFBcUI7Ozs7SUFBckIsVUFBc0IsS0FBd0I7UUFDMUMsSUFBSSxDQUFDLDJCQUEyQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUNoRDs7OztJQUVELDZDQUFXOzs7SUFBWDtRQUNJLElBQUksQ0FBQywyQkFBMkIsQ0FBQyxXQUFXLEVBQUUsQ0FBQztLQUNsRDs7Z0JBaEJKLFVBQVU7O2tDQVJYOztTQVNhLHVCQUF1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuXG5leHBvcnQgY2xhc3MgQ29sbGFwc2libGVFdmVudCB7XG4gICAgdHlwZTogc3RyaW5nO1xufVxuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQ29sbGFwc2libGVFdmVudFNlcnZpY2Uge1xuICAgIHR5cGU6ICdhY2NvcmRpb24nIHwgJ2V4cGFuZGFibGUnO1xuICAgIC8vIE9ic2VydmFibGUgc3RyaW5nIHNvdXJjZXNcbiAgICBwcml2YXRlIHRvZ2dsZUNvbGxhcHNpYmxlSXRlbVNvdXJjZSA9IG5ldyBTdWJqZWN0PGFueT4oKTtcblxuICAgIC8vIE9ic2VydmFibGUgc3RyaW5nIHN0cmVhbXNcbiAgICB0b2dnbGVDb2xsYXBzaWJsZUl0ZW0kID0gdGhpcy50b2dnbGVDb2xsYXBzaWJsZUl0ZW1Tb3VyY2UuYXNPYnNlcnZhYmxlKCk7XG5cbiAgICAvLyBUb2dnbGUgY29sbGFwc2libGUgaXRlbVxuICAgIHRvZ2dsZUNvbGxhcHNpYmxlSXRlbShldmVudD86IENvbGxhcHNpYmxlRXZlbnQpIHtcbiAgICAgICAgdGhpcy50b2dnbGVDb2xsYXBzaWJsZUl0ZW1Tb3VyY2UubmV4dChldmVudCk7XG4gICAgfVxuXG4gICAgdW5zdWJzY3JpYmUoKSB7XG4gICAgICAgIHRoaXMudG9nZ2xlQ29sbGFwc2libGVJdGVtU291cmNlLnVuc3Vic2NyaWJlKCk7XG4gICAgfVxufVxuIl19