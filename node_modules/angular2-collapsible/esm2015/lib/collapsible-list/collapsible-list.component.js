/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, Input, ContentChildren } from '@angular/core';
import { CollapsibleListItemComponent } from '../collapsible-list-item/collapsible-list-item.component';
import { CollapsibleService } from '../services/collapsible.service';
export class CollapsibleListComponent {
    /**
     * @param {?} collapsibleService
     */
    constructor(collapsibleService) {
        this.collapsibleService = collapsibleService;
        // component options
        //
        // describes the type of the collapsible list: 'accordion' or 'expandable'
        this.type = 'accordion';
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.collapsibleService.setType(this.type);
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        for (const change in changes) {
            if (change === 'type') {
                this.type = changes["type"].currentValue;
                this.collapsibleService.setType(this.type);
            }
        }
    }
}
CollapsibleListComponent.decorators = [
    { type: Component, args: [{
                selector: 'collapsible-list',
                template: `<ng-content select="collapsible-list-item"></ng-content>`,
                providers: [CollapsibleService],
                styles: [`
    :host {
      display: block;
      margin: 0.5rem 0 1rem 0;
      border-top: 1px solid #ddd;
      border-right: 1px solid #ddd;
      border-left: 1px solid #ddd;
      box-shadow:
        0 2px 2px 0 rgba(0, 0, 0, 0.14),
        0 1px 5px 0 rgba(0, 0, 0, 0.12),
        0 3px 1px -2px rgba(0, 0, 0, 0.2);
    }

    .side-nav :host,
    .side-nav.fixed :host {
      border: none;
      box-shadow: none;
    }

    :host(.popout) {
      border: none;
      box-shadow: none;
    }

    :host(.popout) > li {
      box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);
      margin: 0 24px;
      transition: margin 0.35s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }

    .side-nav :host {
      margin: 0;
    }
  `]
            }] }
];
/** @nocollapse */
CollapsibleListComponent.ctorParameters = () => [
    { type: CollapsibleService }
];
CollapsibleListComponent.propDecorators = {
    type: [{ type: Input }],
    contentListItems: [{ type: ContentChildren, args: [CollapsibleListItemComponent,] }]
};
if (false) {
    /** @type {?} */
    CollapsibleListComponent.prototype.type;
    /** @type {?} */
    CollapsibleListComponent.prototype.contentListItems;
    /** @type {?} */
    CollapsibleListComponent.prototype.collapsibleService;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sbGFwc2libGUtbGlzdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyMi1jb2xsYXBzaWJsZS8iLCJzb3VyY2VzIjpbImxpYi9jb2xsYXBzaWJsZS1saXN0L2NvbGxhcHNpYmxlLWxpc3QuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUVULEtBQUssRUFDTCxlQUFlLEVBQ2hCLE1BQU0sZUFBZSxDQUFDO0FBRXZCLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLDBEQUEwRCxDQUFDO0FBRXhHLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBeUNyRSxNQUFNOzs7O0lBUUosWUFBb0Isa0JBQXNDO1FBQXRDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7Ozs7b0JBSmQsV0FBVztLQUlROzs7O0lBRS9ELFFBQVE7UUFDTixJQUFJLENBQUMsa0JBQWtCLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUM1Qzs7Ozs7SUFFRCxXQUFXLENBQUMsT0FBc0I7UUFDaEMsS0FBSyxNQUFNLE1BQU0sSUFBSSxPQUFPLEVBQUU7WUFDNUIsSUFBSSxNQUFNLEtBQUssTUFBTSxFQUFFO2dCQUNyQixJQUFJLENBQUMsSUFBSSxHQUFHLE9BQU8sU0FBTSxZQUFZLENBQUM7Z0JBQ3RDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQzVDO1NBQ0Y7S0FDRjs7O1lBNURGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsa0JBQWtCO2dCQUM1QixRQUFRLEVBQUUsMERBQTBEO2dCQW1DcEUsU0FBUyxFQUFFLENBQUMsa0JBQWtCLENBQUM7eUJBbEN0Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBaUNSO2FBRUY7Ozs7WUF4Q1Esa0JBQWtCOzs7bUJBNkN4QixLQUFLOytCQUVMLGVBQWUsU0FBQyw0QkFBNEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb21wb25lbnQsXG4gIE9uSW5pdCwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzLFxuICBJbnB1dCxcbiAgQ29udGVudENoaWxkcmVuXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBDb2xsYXBzaWJsZUxpc3RJdGVtQ29tcG9uZW50IH0gZnJvbSAnLi4vY29sbGFwc2libGUtbGlzdC1pdGVtL2NvbGxhcHNpYmxlLWxpc3QtaXRlbS5jb21wb25lbnQnO1xuXG5pbXBvcnQgeyBDb2xsYXBzaWJsZVNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9jb2xsYXBzaWJsZS5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY29sbGFwc2libGUtbGlzdCcsXG4gIHRlbXBsYXRlOiBgPG5nLWNvbnRlbnQgc2VsZWN0PVwiY29sbGFwc2libGUtbGlzdC1pdGVtXCI+PC9uZy1jb250ZW50PmAsXG4gIHN0eWxlczogW2BcbiAgICA6aG9zdCB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIG1hcmdpbjogMC41cmVtIDAgMXJlbSAwO1xuICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNkZGQ7XG4gICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjZGRkO1xuICAgICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjZGRkO1xuICAgICAgYm94LXNoYWRvdzpcbiAgICAgICAgMCAycHggMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjE0KSxcbiAgICAgICAgMCAxcHggNXB4IDAgcmdiYSgwLCAwLCAwLCAwLjEyKSxcbiAgICAgICAgMCAzcHggMXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjIpO1xuICAgIH1cblxuICAgIC5zaWRlLW5hdiA6aG9zdCxcbiAgICAuc2lkZS1uYXYuZml4ZWQgOmhvc3Qge1xuICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICB9XG5cbiAgICA6aG9zdCgucG9wb3V0KSB7XG4gICAgICBib3JkZXI6IG5vbmU7XG4gICAgICBib3gtc2hhZG93OiBub25lO1xuICAgIH1cblxuICAgIDpob3N0KC5wb3BvdXQpID4gbGkge1xuICAgICAgYm94LXNoYWRvdzogMCAycHggNXB4IDAgcmdiYSgwLCAwLCAwLCAwLjE2KSwgMCAycHggMTBweCAwIHJnYmEoMCwgMCwgMCwgMC4xMik7XG4gICAgICBtYXJnaW46IDAgMjRweDtcbiAgICAgIHRyYW5zaXRpb246IG1hcmdpbiAwLjM1cyBjdWJpYy1iZXppZXIoMC4yNSwgMC40NiwgMC40NSwgMC45NCk7XG4gICAgfVxuXG4gICAgLnNpZGUtbmF2IDpob3N0IHtcbiAgICAgIG1hcmdpbjogMDtcbiAgICB9XG4gIGBdLFxuICBwcm92aWRlcnM6IFtDb2xsYXBzaWJsZVNlcnZpY2VdXG59KVxuZXhwb3J0IGNsYXNzIENvbGxhcHNpYmxlTGlzdENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcbiAgLy8gY29tcG9uZW50IG9wdGlvbnNcbiAgLy9cbiAgLy8gZGVzY3JpYmVzIHRoZSB0eXBlIG9mIHRoZSBjb2xsYXBzaWJsZSBsaXN0OiAnYWNjb3JkaW9uJyBvciAnZXhwYW5kYWJsZSdcbiAgQElucHV0KCkgdHlwZTogJ2FjY29yZGlvbicgfCAnZXhwYW5kYWJsZScgPSAnYWNjb3JkaW9uJztcblxuICBAQ29udGVudENoaWxkcmVuKENvbGxhcHNpYmxlTGlzdEl0ZW1Db21wb25lbnQpIGNvbnRlbnRMaXN0SXRlbXM6IEFycmF5PENvbGxhcHNpYmxlTGlzdEl0ZW1Db21wb25lbnQ+O1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY29sbGFwc2libGVTZXJ2aWNlOiBDb2xsYXBzaWJsZVNlcnZpY2UpIHsgfVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIHRoaXMuY29sbGFwc2libGVTZXJ2aWNlLnNldFR5cGUodGhpcy50eXBlKTtcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcbiAgICBmb3IgKGNvbnN0IGNoYW5nZSBpbiBjaGFuZ2VzKSB7XG4gICAgICBpZiAoY2hhbmdlID09PSAndHlwZScpIHtcbiAgICAgICAgdGhpcy50eXBlID0gY2hhbmdlcy50eXBlLmN1cnJlbnRWYWx1ZTtcbiAgICAgICAgdGhpcy5jb2xsYXBzaWJsZVNlcnZpY2Uuc2V0VHlwZSh0aGlzLnR5cGUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIl19