{"version":3,"sources":["webpack:///./src/app/signin/signin.module.ts","webpack:///./src/app/signin/signin.page.html","webpack:///./src/app/signin/signin.page.scss","webpack:///./src/app/signin/signin.page.ts"],"names":[],"mappings":"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","file":"signin-signin-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SigninPage } from './signin.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SigninPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [SigninPage]\n})\nexport class SigninPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"transparent\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button color=\\\"light\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title color=\\\"light\\\" text-center>Sign In</ion-title>\\n  </ion-toolbar>\\n  <!-- <div class=\\\"hr\\\"></div> -->\\n</ion-header>\\n\\n<ion-content class=\\\"grad\\\" fullscreen>\\n\\n\\n\\n  <!-- <ion-item class=\\\"head\\\">\\n      <ion-toolbar color=\\\"transparent\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-menu-button color=\\\"light\\\"></ion-menu-button>\\n          </ion-buttons>\\n          <ion-title color=\\\"light\\\" text-center>Sign In</ion-title>\\n        </ion-toolbar>\\n    </ion-item> -->\\n\\n  <img src=\\\"../assets/img/logo.png\\\" class=\\\"logo-signin\\\" />\\n\\n  <br>\\n  <form class=\\\"list-form\\\" [formGroup]=\\\"login_form\\\" autocomplete=\\\"off\\\">\\n    <ion-item class=\\\"input-email\\\">\\n      <ion-label position=\\\"floating\\\" color=\\\"light\\\">\\n        <img src=\\\"../assets/icon/email-icon.png\\\" class=\\\"input-email-icon\\\" />\\n        <!-- <ion-icon name=\\\"mail\\\" mode=\\\"ios\\\" color=\\\"primary\\\" \\\"></ion-icon> -->\\n        Email\\n      </ion-label>\\n      <ion-input type=\\\"email\\\" formControlName=\\\"email\\\"></ion-input>\\n    </ion-item>\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"login_form.controls.email.hasError('required') && login_form.controls.email.touched\\\">\\n      <p>Email Address is required!</p>\\n    </ion-item>\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"login_form.controls.email.hasError('pattern') && login_form.controls.email.touched\\\">\\n      <p>Please Enter a Valid Email Address!</p>\\n    </ion-item>\\n\\n    <ion-item class=\\\"input-pass\\\">\\n      <ion-label position=\\\"floating\\\" color=\\\"light\\\">\\n        <img src=\\\"../assets/icon/key-icon.png\\\" class=\\\"input-email-icon\\\" />\\n        <!-- <ion-icon name=\\\"mail\\\" mode=\\\"ios\\\" color=\\\"primary\\\" \\\"></ion-icon> -->\\n        Password\\n      </ion-label>\\n      <ion-input type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\n    </ion-item>\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\n      *ngIf=\\\"login_form.controls.password.hasError('required') && login_form.controls.password.touched\\\">\\n      <p>Password is required!</p>\\n    </ion-item>\\n\\n    <ion-button shape=\\\"round\\\" class=\\\"btn\\\" size=\\\"large\\\" expand=\\\"full\\\" (click)=\\\"doLogin()\\\">\\n      SIGN IN\\n    </ion-button>\\n  </form>\\n\\n    <div class=\\\"text-forgot-main\\\">\\n      <ion-button fill=\\\"clear\\\" routerLink=\\\"/forgotpass\\\" class=\\\"right\\\">Forgot Password ?\\n      </ion-button>\\n    </div>\\n\\n    <div class=\\\"home_main_or\\\">\\n      <div class=\\\"home_or\\\"><span>OR</span></div>\\n    </div>\\n\\n    <ion-button class=\\\"btn-fb\\\" expand=\\\"block\\\">\\n      Sign in with facebook\\n    </ion-button>\\n\\n    <ion-button expand=\\\"block\\\" class=\\\"btn-google\\\">\\n      Sign in with Google\\n    </ion-button>\\n\\n    <ion-button fill=\\\"clear\\\" color=\\\"light\\\" class=\\\"btn-text\\\" routerLink=\\\"/signup\\\">Don't have an\\n      account? &nbsp;\\n      <ion-text color=\\\"primary\\\"> Sign Up</ion-text>\\n    </ion-button>\\n  \\n\\n</ion-content>\"","module.exports = \".btn {\\n  --background: #cead65;\\n  text-transform: none;\\n  font-size: 16px;\\n  color: #fff;\\n  margin-left: 40px;\\n  margin-right: 40px;\\n  margin-bottom: 25px;\\n  margin-top: 30px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zaWx2ZXJ3ZWJidXp6L0RvY3VtZW50cy9NRC9pb25pY1Byb2plY3QvZ2hhcnlhbC1lY29tbWVyY2UtYXBwL3NyYy9hcHAvc2lnbmluL3NpZ25pbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxxQkFBYTtFQUNiLG9CQUFvQjtFQUNwQixlQUFlO0VBQ2YsV0FBVztFQUNYLGlCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsbUJBQW1CO0VBQ25CLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvc2lnbmluL3NpZ25pbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnRue1xuICAgIC0tYmFja2dyb3VuZDogI2NlYWQ2NTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgbWFyZ2luLWxlZnQ6NDBweDsgXG4gICAgbWFyZ2luLXJpZ2h0OiA0MHB4OyBcbiAgICBtYXJnaW4tYm90dG9tOiAyNXB4OyBcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xuICB9XG5cbiAgIl19 */\"","import { Component, OnInit, Injectable } from '@angular/core';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { RestService } from '../api/rest.service';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Storage } from '@ionic/storage';\n\nimport { MagentoServiceService } from '../api/magento-service.service';\nimport { UserResponse } from '../interfaces/user-response.models';\nimport { Addresses } from '../interfaces/address.models';\nimport { Constants } from '../interfaces/constants.models';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.page.html',\n  styleUrls: ['./signin.page.scss'],\n})\n@Injectable()\nexport class SigninPage implements OnInit {\n  login_form: FormGroup;\n  login_back_url : any = '/tabs/account';\n  constructor(private statusBar: StatusBar, \n    private formBuilder: FormBuilder,\n    private rest:RestService, \n    private auth:AuthenticationService, \n    private router: Router,\n    private route: ActivatedRoute,\n    private service: MagentoServiceService) {\n    this.login_fb();\n    this.route.queryParams.subscribe(params => {\n      if (params && params.returnUrl) {\n        this.login_back_url = params.returnUrl;\n      }\n    });\n  }\n\n  login_fb() {\n    this.login_form = this.formBuilder.group({\n      email: [null, Validators.compose([\n        Validators.pattern('[A-Za-z0-9._%+-]{3,}@[a-zA-Z]{3,}([.]{1}[a-zA-Z]{2,}|[.]{1}[a-zA-Z]{2,}[.]{1}[a-zA-Z]{2,})'),\n        Validators.required\n      ])],\n      password: [null, Validators.required]\n    });\n  };\n  ngOnInit() {\n    this.statusBar.styleLightContent();\n    this.statusBar.backgroundColorByHexString('#090809');\n  }\n\n  doLogin() {\n    for (let v in this.login_form.controls) {\n      this.login_form.controls[v].markAsTouched();\n    }\n    if (this.login_form.valid) {\n      this.rest.presentLoading();\n      let body = {\n        \"username\": this.login_form.value.email,\n        \"password\": this.login_form.value.password\n      };\n\n      this.rest.post('integration/customer/token', body)\n        .subscribe(res=>{\n          if(res){\n            this.userDetails(res);\n          }else{\n            this.rest.dismissLoading();\n            this.rest.presentToastWithOptions('Something was wrong! Please try again.')\n          }\n        },(err)=>{\n          this.rest.dismissLoading();\n          this.rest.presentToastWithOptions(err.message);\n        });\n    }\n  }\n\n\n  userDetails(res: any){\n    this.auth.login(res).then((v)=>{\n      this.service.getUser(res).subscribe(data =>{\n        this.rest.wishlist();\n        this.rest.dismissLoading();\n        let userResponse: UserResponse = data;\n        window.localStorage.setItem(Constants.USER_KEY, JSON.stringify(userResponse));\n        if(userResponse.addresses){\n          userResponse.addresses.id = -100;\n          let addresse = new Array<Addresses>();\n          addresse.push(userResponse.addresses);\n          if(userResponse.default_billing){\n            window.localStorage.setItem(Constants.SELECTED_ADDRESS_BILLING, JSON.stringify(userResponse.default_billing));\n          }\n          if(userResponse.default_shipping){\n            window.localStorage.setItem(Constants.SELECTED_ADDRESS_SHIPPING, JSON.stringify(userResponse.default_shipping));\n          }\n          window.localStorage.setItem(Constants.SELECTED_ADDRESS_LIST, JSON.stringify(addresse));\n        }\n        console.log('login Back Url:', this.login_back_url);\n        this.router.navigate([this.login_back_url]);\n      },err =>{\n        this.rest.dismissLoading();\n        this.rest.presentToastWithOptions(err.error.message);\n      });\n    });\n  }\n}\n"],"sourceRoot":""}